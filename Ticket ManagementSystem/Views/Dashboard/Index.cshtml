@using Ticket_ManagementSystem.ViewModels.ViewModelOfDashboard
@model DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<div class="container-fluid">
    <!-- الإحصائيات -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card text-white bg-primary shadow-sm mb-3">
                <div class="card-body">
                    <h5 class="card-title">Users</h5>
                    <p class="card-text fs-4">@Model.CountOfUser</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-secondary shadow-sm mb-3">
                <div class="card-body">
                    <h5 class="card-title">Roles</h5>
                    <p class="card-text fs-4">@Model.CountOfRoles</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-dark shadow-sm mb-3">
                <div class="card-body">
                    <h5 class="card-title">Comments</h5>
                    <p class="card-text fs-4">@Model.CountOfComment / @Model.CountOfAllComment</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card text-white bg-info shadow-sm mb-3">
                <div class="card-body">
                    <h5 class="card-title">Projects</h5>
                    <p class="card-text fs-4">@Model.CountOfProject / @Model.CountOfAllProject</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-success shadow-sm mb-3">
                <div class="card-body">
                    <h5 class="card-title">Tasks</h5>
                    <p class="card-text fs-4">@Model.CountOfTask / @Model.CountOfAllTask</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-warning shadow-sm mb-3">
                <div class="card-body">
                    <h5 class="card-title">Tickets</h5>
                    <p class="card-text fs-4">@Model.CountOfTicket / @Model.CountOfAllTicket</p>
                </div>
            </div>
        </div>
    </div>

    <!-- الرسوم البيانية -->
    <div class="row mt-5">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header fw-bold">Ticket Distribution</div>
                <div class="card-body">
                    <canvas id="ticketChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header fw-bold">Task Distribution</div>
                <div class="card-body">
                    <canvas id="taskChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- التذاكر -->
    <div class="row mt-5">
        <div class="col-md-12">
            <div class="card shadow-sm">
                <div class="card-header fw-bold">Recent Tickets</div>
                <div class="card-body">
                    <table class="table table-bordered align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>ID</th>
                                <th>Title</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var ticket in Model.TicketDtos.Take(5))
                            {
                                <tr>
                                    <td>@ticket.Id</td>
                                    <td>@ticket.Title</td>
                                    <td>
                                        <span class="badge bg-@GetTicketBadge(ticket.Status)">
                                            @ticket.Status
                                        </span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- المهام -->
    <div class="row mt-4">
        <div class="col-md-12">
            <div class="card shadow-sm">
                <div class="card-header fw-bold">Recent Tasks</div>
                <div class="card-body">
                    <table class="table table-bordered align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>ID</th>
                                <th>Title</th>
                                <th>Status</th>
                                <th>Due Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var task in Model.TaskDtos.Take(5))
                            {
                                <tr>
                                    <td>@task.Id</td>
                                    <td>@task.Title</td>
                                    <td>
                                        <span class="badge bg-@GetTaskBadge(task.Status)">
                                            @task.Status
                                        </span>
                                    </td>
                                    <td>
                                        @task.DueDate.ToShortDateString()
                                        @if (task.IsOverdue)
                                        {
                                            <span class="badge bg-danger ms-2">Overdue</span>
                                        }
                                        else if (task.IsDueSoon)
                                        {
                                            <span class="badge bg-warning text-dark ms-2">Due Soon</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetTicketBadge(string status)
    {
        return status switch
        {
            "Open" => "warning",
            "InReview" => "info",
            "Resolved" => "primary",
            "Closed" => "success",
            _ => "secondary"
        };
    }

    string GetTaskBadge(string status)
    {
        return status switch
        {
            "New" => "secondary",
            "ToDo" => "warning",
            "InProgress" => "info",
            "Done" => "success",
            "Blocked" => "danger",
            _ => "secondary"
        };
    }
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        const ticketChart = new Chart(document.getElementById('ticketChart'), {
            type: 'doughnut',
            data: {
                labels: ['Active', 'Deleted'],
                datasets: [{
                    data: [@Model.CountOfTicket, @Model.CountOfAllTicket - @Model.CountOfTicket],
                    backgroundColor: ['#ffc107', '#e2e3e5'],
                    borderWidth: 1
                }]
            },
            options: {
                plugins: {
                    legend: { position: 'bottom' }
                }
            }
        });

        const taskChart = new Chart(document.getElementById('taskChart'), {
            type: 'doughnut',
            data: {
                labels: ['Active', 'Deleted'],
                datasets: [{
                    data: [@Model.CountOfTask, @Model.CountOfAllTask - @Model.CountOfTask],
                    backgroundColor: ['#198754', '#e2e3e5'],
                    borderWidth: 1
                }]
            },
            options: {
                plugins: {
                    legend: { position: 'bottom' }
                }
            }
        });
    </script>
}
